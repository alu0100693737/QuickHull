package quickhull;

import static java.lang.String.format;

import org.assertj.core.api.AbstractAssert;
import org.assertj.core.api.Assertions;

import quickhull.jfrAplicacion;

/**
 * {@link jfrAplicacion} specific assertions - Generated by CustomAssertionGenerator.
 */
public class jfrAplicacionAssert extends AbstractAssert<jfrAplicacionAssert, jfrAplicacion> {

	/**
	 * Creates a new </code>{@link jfrAplicacionAssert}</code> to make assertions on actual jfrAplicacion.
	 * @param actual the jfrAplicacion we want to make assertions on.
	 */
	public jfrAplicacionAssert(jfrAplicacion actual) {
		super(actual, jfrAplicacionAssert.class);
	}

	/**
	 * An entry point for jfrAplicacionAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
	 * With a static import, one's can write directly : <code>assertThat(myjfrAplicacion)</code> and get specific assertion with code completion.
	 * @param actual the jfrAplicacion we want to make assertions on.
	 * @return a new </code>{@link jfrAplicacionAssert}</code>
	 */
	public static jfrAplicacionAssert assertThat(jfrAplicacion actual) {
		return new jfrAplicacionAssert(actual);
	}

}
